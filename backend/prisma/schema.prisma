// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  firstName String
  lastName  String
  role      Role      @relation(fields: [roleId], references: [id])
  roleId    Int
  email     String    @unique
  active    Boolean
  createdAt DateTime  @default(now())

  children  ChildGuardian[]
  loginTokens LoginToken[]
  sessions  Session[]
}

model Role {
  id    Int    @id @default(autoincrement())
  type  String
  users User[]
}

model Child {
  id        Int        @id @default(autoincrement())
  firstName String
  lastName  String
  startDate DateTime
  groupId   Int
  createdAt DateTime   @default(now())

  guardians ChildGuardian[]
}

model ChildGuardian {
  id         Int   @id @default(autoincrement())
  user       User  @relation(fields: [userId], references: [id])
  userId     Int
  relationship String
  child      Child @relation(fields: [childId], references: [id])
  childId    Int
}

model LoginToken {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  tokenHash String
  expiresAt DateTime
  createdAt DateTime @default(now())
  usedAt    DateTime?
}

model Session {
  idHash    String   @id
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  expiresAt DateTime
}